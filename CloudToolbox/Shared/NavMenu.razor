@inject CalculatorCollectionService CollectionService

<div class="w-100 d-flex p-2" style="position: sticky; top: 0; height: 50px; background-color: #0d6efd; z-index: 30">
    <button class="btn btn-light" title="Navigation menu" @onclick="ToggleNavMenu" >
        <i class="bi bi-list"></i>
    </button>

    <a href="/" class="text-decoration-none">
        <h3 class="ms-2 text-white">
            Cloud Toolbox
        </h3>
    </a>

     <form class="d-flex ms-auto global-search">
        <input class="form-control me-2" type="search" placeholder="🔎︎" aria-label="Search" @bind-value="GlobalSearchText" @bind-value:event="oninput" @onkeyup="GlobalSearch">

        @if(GlobalSearchCalculators.Count > 0)
        {
            <div class="results-container rounded-1 shadow border">
                @foreach (DisplayCalculator calc in GlobalSearchCalculators)
                {
                    <NavLink class="nav-link p-2" href="@calc.Uri">
                        <span><i class="@calc.Collection.CssIcon"></i> @calc.DisplayName</span>
                    </NavLink>
                }

            </div>
        }
        else
        {
            if (GlobalSearchText != null && GlobalSearchText.Length > 0)
            {
                <div class="results-container rounded-1 shadow">
                    <span class="p-2">
                        No results
                    </span>
                </div>
            }
        }
    </form>
</div>


<div class="sidebar-container d-print-none @NavMenuCssClass">
    <div class="sidebar">
        <div class="@NavMenuCssClass nav-scrollable" >
            <nav class="flex-column">
                <div class="nav-item px-3 mb-3">
                    <NavLink class="nav-link text-dark" href="" Match="NavLinkMatch.All">
                        <span class="oi oi-home" aria-hidden="true"></span> Home
                    </NavLink>
                </div>

                <div class="nav-item px-3 mb-3">
                    <input class="form-control rounded-1" placeholder="Search..." type="text" @bind-value="FilterText" @bind-value:event="oninput" @onkeyup="FilterMenuItems" />
                </div>

                @foreach (DisplayCalculator calc in FilteredCalculators)
                {
                    <div class="nav-item px-3 @(calc.Collection.Name)" @onclick="ToggleNavMenu">
                        <NavLink class="nav-link" href="@calc.Uri">
                            @calc.DisplayName
                        </NavLink>
                    </div>
                }
            </nav>

        </div>

    </div>
</div>

@code {

    public List<DisplayCalculator> Calculators { get; set; }
    public List<DisplayCalculator> FilteredCalculators { get; set; }
    public List<DisplayCalculator> GlobalSearchCalculators { get; set; }

    public string GlobalSearchText { get; set; }
    public string FilterText { get; set; }

    private bool collapseNavMenu = true;
    private bool hasSearched = false;
    private bool hasGlobalSearched = false;
    private string? NavMenuCssClass => collapseNavMenu ? "collapsed" : null;

    protected override void OnInitialized()
    {
        Calculators = CollectionService.GetCollections().SelectMany(x => x.Calculators).ToList();
        FilteredCalculators = Calculators;
        GlobalSearchCalculators = new List<DisplayCalculator>();
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
    
    private void GlobalSearch()
    {
        if (GlobalSearchText != null && GlobalSearchText.Length > 0)
        {
            hasGlobalSearched = true;
            GlobalSearchCalculators = Calculators
            .Where(x => x.DisplayName.ToLower().Contains(GlobalSearchText.ToLower()))
            .Take(5)
            .ToList();
        }
        else
        {
            if (hasGlobalSearched)
            {
                GlobalSearchCalculators = new List<DisplayCalculator>();
                InvokeAsync(StateHasChanged);
            }
        }
    }

    private void FilterMenuItems()
    {
        if (FilterText != null && FilterText.Length > 0)
        {
            hasSearched = true;
            FilteredCalculators = Calculators.Where(x => x.DisplayName.ToLower().Contains(FilterText.ToLower())).ToList();
        }
        else
        {
            if (hasSearched)
            {
                FilteredCalculators = Calculators;
                InvokeAsync(StateHasChanged);
            }
        }
    }
}

<style>
    @foreach (var collection in CollectionService.GetCollections())
    {
        var cssHover = $".nav-item.{collection.Name} .nav-link {{ border-left: 2px solid {collection.CssAccentColour}; }} .nav-item.{collection.Name}:hover .nav-link {{ background:{collection.CssAccentColour}; }}";

        <text>
            @(cssHover)
        </text>
    }
</style>